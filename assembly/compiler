#!/usr/bin/env python3

import sys
import subprocess
#import os

def compile_assembly_file(assembly_file, object_file):
    try:
        # Use nasm to compile the assembly code and make it into an object file
        subprocess.run(["nasm", "-f", "elf64", "-g", "-o", object_file, assembly_file], check=True)
    except subprocess.CalledProcessError as e:
        print(f"Compilation failed with error:\n{e}")

def create_executable(assembly_file, object_file, executable_file):
    try:
        # Use ld to link the object file and create an executable
        subprocess.run(["ld", "-o", executable_file, object_file], check=True)
        #os.remove(object_file)  # Delete the object file
    except subprocess.CalledProcessError as e:
        print(f"Executable creation failed with error:\n{e}")

if __name__ == "__main__":
    if len(sys.argv) != 2:
        print("This script is used to compile assembly files and create executables\nSyntax: ./compiler.py {assembly_file}")
        sys.exit(1)

    assembly_file = sys.argv[1]
    object_file = assembly_file.replace(".asm", ".o")
    executable_file = object_file.replace(".o", "")

    compile_assembly_file(assembly_file, object_file)
    create_executable(assembly_file, object_file, executable_file)